name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  VITE_SPOTIFY_TOKEN: ${{ secrets.VITE_SPOTIFY_TOKEN }}

jobs:
  build-test-publish:
    name: Build, Test and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run unit tests
        run: npm run test
      
      - name: Generate unit test coverage
        run: npm run coverage

      - name: Run e2e tests and generate coverage
        run: npm run cy:coverage

      - name: Show lcov.info (debug)
        run: ls -R coverage && cat coverage/lcov.info || echo "No lcov.info found"

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build React App
        run: npm run build

      # --- Docker steps ---
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set lowercase image name
        run: echo "REPO_NAME_LC=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME_LC }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME_LC }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
